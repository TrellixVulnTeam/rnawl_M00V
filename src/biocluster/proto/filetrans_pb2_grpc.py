# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: config.proto
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import filetrans_pb2 as filetrans__pb2
import public_pb2 as public__pb2


class FileTransServerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Trans = channel.unary_unary(
        '/filetrans.FileTransServer/Trans',
        request_serializer=filetrans__pb2.FileTrans.SerializeToString,
        response_deserializer=public__pb2.Success.FromString,
        )
    self.Wait = channel.unary_stream(
        '/filetrans.FileTransServer/Wait',
        request_serializer=filetrans__pb2.WorkflowOrTool.SerializeToString,
        response_deserializer=filetrans__pb2.Progress.FromString,
        )
    self.TransFile = channel.stream_unary(
        '/filetrans.FileTransServer/TransFile',
        request_serializer=filetrans__pb2.FileTrans.SerializeToString,
        response_deserializer=public__pb2.Success.FromString,
        )


class FileTransServerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Trans(self, request, context):
    """批量下载请求, 允许下载文件夹
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Wait(self, request, context):
    """等待所有传输任务完成
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TransFile(self, request_iterator, context):
    """批量下载文件,不接受文件夹
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FileTransServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Trans': grpc.unary_unary_rpc_method_handler(
          servicer.Trans,
          request_deserializer=filetrans__pb2.FileTrans.FromString,
          response_serializer=public__pb2.Success.SerializeToString,
      ),
      'Wait': grpc.unary_stream_rpc_method_handler(
          servicer.Wait,
          request_deserializer=filetrans__pb2.WorkflowOrTool.FromString,
          response_serializer=filetrans__pb2.Progress.SerializeToString,
      ),
      'TransFile': grpc.stream_unary_rpc_method_handler(
          servicer.TransFile,
          request_deserializer=filetrans__pb2.FileTrans.FromString,
          response_serializer=public__pb2.Success.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'filetrans.FileTransServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
