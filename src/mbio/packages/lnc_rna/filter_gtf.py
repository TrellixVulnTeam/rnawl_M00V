# -*- coding: utf-8 -*-
# __author__ = 'qinjincheng'

from optparse import OptionParser
import regex

parser = OptionParser(description='Filter GTF file generated by stringtie or cufflinks')
parser.add_option('-k', '--ref', dest='ref', help='Input reference GTF file')
parser.add_option('-r', '--raw', dest='raw', help='Input raw GTF file')
parser.add_option('-f', '--filter', dest='filter', help='Output filtered GTF file')
(opts, args) = parser.parse_args()

def main(ref, raw, filter):
    t2g_dict = dict()
    p = r'^([^#]\S*?)\t+((\S+)\t+){7}(.*;)*((transcript_id|gene_id)\s+?\"(\S+?)\");.*((transcript_id|gene_id)\s+?\"(\S+?)\");(.*;)*$'
    with open(ref) as ref_handle:
        for line in ref_handle:
            m = regex.match(p, line.strip())
            if m:
                if 'transcript_id' in m.captures(6):
                    tran_id = m.captures(7)[0]
                    gene_id = m.captures(10)[0]
                else:
                    tran_id = m.captures(10)[0]
                    gene_id = m.captures(7)[0]
                t2g_dict[tran_id] = gene_id
    with open(raw) as raw_handle, open(filter, 'w') as filter_handle:
        for line in raw_handle:
            m = regex.match(p, line.strip())
            if m:
                if 'transcript_id' in m.captures(6):
                    tran_id = m.captures(7)[0]
                    gene_id = m.captures(10)[0]
                else:
                    tran_id = m.captures(10)[0]
                    gene_id = m.captures(7)[0]
                if t2g_dict.has_key(tran_id):
                    if t2g_dict[tran_id] == gene_id:
                        filter_handle.write(line)
                    else:
                        print 'WARNING: {} is known transcript which do not belong to {} gene'.format(tran_id, gene_id)
                else:
                    filter_handle.write(line)
            else:
                filter_handle.write(line)

if __name__ == '__main__':
    if opts.ref and opts.raw and opts.filter:
        main(opts.ref, opts.raw, opts.filter)
    else:
        parser.print_help()