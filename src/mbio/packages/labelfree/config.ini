;
; Config file for nGram project
;
; Syntax: name=opt

;;;; SETUP FILE LOCATIONS AND OPTIONS
;;;; NOTE: The only option you MUST change is the PATH where your test sequences are located
;;;; NOTE: All other options are set as defaults, don't change unless you know what you are doing

;SETUP THE LOG FILE DIRECTORY
; sLogDirName - Directory to store the log files and the data files. If a full path
; is not specified, then the directory is assumed to be from the current working directory
sLogDirName=Log

;SETUP THE PATH FOR TEST SEQUENCE DATA FILE
;sSLTestDataName - Specify the file path for the set of test sequences (sequence file in FASTA format).
sSLTestDataName=${expfasta}

;SELECT THE TYPE OF TEST SEQUENCE DATA
;In most cases, the test data is unlabeled, so this option would be '2'
;iSLTestDataOption = (0) - Do NOT read in test data (thus, a cross-validation 
;                          is performed on training data only)
;                    (1) - Test data consists of LABELED sequences, and therefore
;                          accuracy is calculated
;                    (2) - Test data consists of UNLABLED sequences, and therefore
;                          only predictions are generated
iSLTestDataOption=2

;SELECT HOW YOU WANT TO HANDLE THE DUPLICATES BETWEEN TRAINING AND TESTING SEQUENCES
;Select '0' for regular searches
;iSLTestRedundantOption = 0 - Read in test data as is, allowing duplicates between
;                             training and test set. Just check the number of duplicates only
;                         1 - Remove duplicates in test data that exist in training
;                             data
;                         2 - Remove duplicates in training data that exist in test
;                             data
;                         3 - Remove NON-duplicates in test data. (Sequences that 
;                             don't exist in the training data.)
iSLTestRedundantOption=0

;sSLProteomeDataFile - Name of unlabeled proteome sequence data file
sSLProteomeDataFile=give the path if you are using this

;ngLOC-X OPTIONS (refer to King and Guda, 2007, Genome Bilogy, 8:R68)
; iSLUseProteomeDataFile = 0 - Do NOT use unlabeled proteome sequence data
;                        = 1 - Use unlabeled proteome sequence data file and run as 
;                          ngLOC-X
;                        = 2 - Apply test data file as proteome data, and run as
;                          ngLOC-X
;Select '0' here for regular searches
iSLUseProteomeDataFile=0

;SET THE SCORE THRESHOLD FOR PREDICTING LOCALIZATION
; CSthresh - Confidence score threshold on the predictions.
; Minimum of 10.0 This score can be increased to increase specificity
CSthresh=20

;SET THE SCORE THRESHOLD FOR PREDICTING MULTIPLE LOCATIONS
; MLCSthresh - Threshold for specifying whether a MLCS score implies single
;              localization or multi-localization
MLCSthresh=60.0

;SET THE n-GRAM LENGTH
; nomerLen = residue subsequence length to use as a feature. NOTE: Be sure this
;            is NOT LONGER than the minimum length sequence being read in
; For larger datasets, nomerLen can be increased to '7'
nGramLen=6

;SET THE MINIMUM SEQUENCE LENGTH TO MAKE A PREDICTION
; SLminLength - smallest length of the test sequence to allow prediction
SLminLength=10


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ADVANCED OPTIONS -- These options do not need to be changed as long as the 
; training data is in an identical format as the ngLOC training data supplied
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;SET THE PATH FOR TRAINING DATA IF YOU WANT TO USE YOUR OWN
; sSLDataName - file / directory where ngLOC training data is located. If you 
;               want to use your own training data, you may supply the file / 
;               directory name here. See documentation for more information.
sSLDataName=${trainfasta}

;SET THE DATA OPTIONS
; iSLDataOption = (1) - Above name is a file of LABELED sequences
;                 (2) - Above name is a directory over different classes
; [For ngLOC data, set to 1. See documentation for more information.]
iSLDataOption=1

;SET HOW TO HANDLE REDUNDANT SEQUENCES IN YOUR TRAINING DATA
; bAllowRedundantData = 0 - Sift through each file to be sure every sequence read
;                           into the dataset is unique. Discard redundant sequences
;                       1 - Allow redundant sequences to be read into the dataset
bAllowRedundantData=0

;SET HOW TO HANDLE MULTIPLE LABELED SEQUENCES IN TRAINING
; nSLTrainMultiType = 0 - Do not use multi sequences.
;                     1 - [ADVANCED] Read multi sequences for which a class is defined 
;                         and feed into their own separate class
;                     2 - [ADVANCED] Read multi sequences for which a class is defined 
;                         and feed into in each appropriate class
;                     3 - Read ALL multi sequences and feed in each class (no separate class)
;                     4 - Read in ALL multi sequences, but do not feed in any 
;                         class, only predict
; For most cases, 0 or 3 are the appropriate settings.
nSLTrainMultiType=3

;SET THE MAXIMUM NUMBER OF CLASSES FOR MULTIPLE LOCALIZATION PREDICTION
; Number of classes to allow for testing if doing multi-localized sequences
; Future revisions will support more than 2 localization classes
nNumMultiTargets=2

;THIS IS FOR USE ONLY IF THE TRAINING DATA HAS SPECIES INFORMATION IN THE SEQUENCE ID
; Output species breakdown in the log file. (This can take up a lot of space
; in the log file, and is thus an option. As long as the header contains the
; Swiss-Prot ID in the format and placement as observed in the original ngLOC
; training data, the parsing of the species information in the header can be done.
bSLOutputSpecies=0

;SET THE DESIRED OUTPUT FORMAT
; iNBConfidenceScoreType = 
;   0   - Output raw log probability over each class
;   1,2 - Output score against worst class (useful for small n-gram)
;   3,4 - Output score against NULL instance on same class -- warning -- if no feature
;         occurs on instance, then NULL is same as instance, giving zero odds ratio
;   5,6 - Output score against worst NULL instance in all classes
;   7,8 - Output score balanced between max and null instance on same class. Can be 
;         used to normalize or NOT normalize, as EACH score is beteen 0-100
;   The even # will output uniform scores if NO n-gram occurred in a particular
;   sequence. (Investigate if this can be used for non-laPlace)
iNBConfidenceScoreType=5

;SET THE CROSS-VALIDATION OPTIONS IF YOU ARE USING YOUR OWN TRAINING SETS
; Options for performing an n-fold cross validation on training data
; Seed value for random number generator used to randomly split the data set into
; n folds. Set to -1 to use current time (i.e. seed = time(NULL))
nPartitionRNGSeed=1000
; How many folds to split the data up into? Set to -1 for leave-one-out validation
; IMPORTANT -- Set to 1 for testing on entire separate TEST file
nFoldValidation=1
; Which of the n folds is going to be the validation data? (n starts at 0) 
;   Set to -1 for complete validation across all folds
iFoldValidation=-1

;SET OUTPUT PREDICTION OPTION FOR EACH SEQUENCE
; Output predictions for each sequence (0/1)
bNBOutputPredictions=1

;SET HOW MANY TOP PREDICTIONS YOU WAN TO SEE IN THE OUTPUT
; Number of top predictions to output in the prediction file
nNBMaxNumPredictions=3

;SET OPTIONS ON WHAT TYPE OF PREDICTIONS YOU WANT SEE IN THE OUTPUT
; Output probabilities and other data on predictions:
;   0 - Do not output sequences
;   1 - Output all sequences
;   2 - Output only multi-localized sequences
iNBOutputRawPredictionData=0
